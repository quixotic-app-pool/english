<template>
  <view style="height: 900px; display: flex; flex-direction: column; align-items: center; justify-content: center">
    <view class='bg' style="width: {{screenWidth}}px"></view>
    <view class="a" style="z-index:3;position: fixed; top:0;width: {{screenWidth}}px; height: 10px; background-color:#FA6570"></view>
    <view style="z-index:1;position: fixed; top:10px; width: {{screenWidth}}px; height: 10px; background-color:#FA6570"></view>
    <view style="z-index:2; margin-top:100px; width: 300px; height: 700px; background-color: yellow">
      <view>
        <text>{{text1}}</text>
      </view>
      <view>
        <text>{{text2}}</text>
      </view>
      <repeat for="{{text3}}" key="index" index="index" item="item">
        <text class="{{item[0] === 1 ? 'green' : item[0] === -1 ? 'del' : ''}}">{{item[1]}}</text>
    </repeat>
    <button @tap="showModal()">show modal</button>
    </view>
    <view class="modal {{ showModal ? 'show' : ''}}" id="modal">
        this is modal
    </view>
  </view>
  <!-- <scroll-view scroll-y style="height: {{screenHeight}}px;animation: moveIt 10s linear infinite;background-image: url('https://d2gg9evh47fn9z.cloudfront.net/800px_COLOURBOX8469023.jpg');" bindscrolltoupper="upper" bindscrolltolower="lower" bindscroll="scroll" scroll-into-view="{{toView}}" scroll-top="{{scrollTop}}">
    <view id="green" class="scroll-view-item bc_green"></view>
    <view id="red"  class="scroll-view-item bc_red"></view>
    <view id="yellow" class="scroll-view-item bc_yellow"></view>
    <view id="blue" class="scroll-view-item bc_blue"></view>
  </scroll-view> -->
  <!-- <view class='box' style="width: {{screenWidth}}px">
      <view class='a topa' style="z-index:4;width: {{screenWidth}}px;position: fixed;height: 50px; background-color:#FA6570"></view>
      <view class="ab topb" style="z-index:1;width: {{screenWidth}}px;position: fixed;height: 30px; background-color:#FA6570"></view>

    <view class='b' style="z-index: 5">
      好友排行 | 世界排行
    </view>
      <view class="slota" style="z-index: 5; width: 305px;position:fixed; height: 5px; top: 45px; "></view>
      <view class="slotb" style="z-index: 2; width: 305px;position:fixed; height: 5px; top: 50px; "></view>


    <view></view>
    <view class='c' style="z-index: 3;">
      <view class="el" style="height: 100px; width: 300px; background-color:blue;">
          <view class="outer-triangle"></view>
      </view>
      <view class="el" style="height: 50px; width: 300px; background-color:blue;"></view>
      <view class="el" style="height: 50px; width: 300px; background-color:blue;"></view>
      <view class="el" style="height: 50px; width: 300px; background-color:blue;"></view>
      <view class="el" style="height: 50px; width: 300px; background-color:blue;"></view>
      <view class="el" style="height: 50px; width: 300px; background-color:blue;"></view>
      <view class="el" style="height: 50px; width: 300px; background-color:blue;"></view>

    </view>
    <view class='d'></view>
    <view class='e'></view>
  </view> -->
</template>

<script>
import wepy from 'wepy'
import Diff from 'text-diff'

export default class TestPage extends wepy.page {
  config = {
    navigationBarTitleText: '好友排行',
    backgroundColor: 'white',
    enablePullDownRefresh: false
  }

  data = {
    screenWidth: wepy.getSystemInfoSync().windowWidth,
    screenHeight: wepy.getSystemInfoSync().windowHeight,
    diff: {},
    text1: 'from day one i have to work hard to feed myself',
    text2: 'From day two, I have to study hard to feed my family',
    text3: '',
    showModal: false
  }
  onReady() {
    console.log('on ready hook')
    this.diff = new Diff()
    this.text3 = this.diff.main(this.text1, this.text2)
    this.diff.cleanupSemantic(this.text3)
  }
  methods = {
    showModal () {
      this.showModal = true
      // this.$apply()
    }
  }
}
</script>

<style lang="less">
.show {
  display: block !important;
  // transform: scale(1) !important;
  animation: showModal 500ms 1;
}
@keyframes showModal {
  0% {
    transform: scale(0);
  }
  25% {
    transform: scale(1.2);
  }
  50% {
    transform: scale(0.9);
  }
  75% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}
.del {
  text-decoration: line-through;
  color: red;
}
.green {
  color: green;
}
.modal {
// animation: modala 2s 1;
// transform: scale(0);
position:fixed;
width:200px;
height:300px;
background-color:red;
z-index:10;
top:100px;
display: none;

}
// @keyframes modala {
//   0
// }

// .outer-triangle{
//     border-left: 70px solid gray;
//     border-bottom: 70px solid transparent;
//     position: absolute;
//     z-index: 1;
// }
// .el {
//   margin-bottom: 5px;
//   border-radius: 5px;
//   background-image:repeating-radial-gradient(
//       circle at 0 0,
//       #eee,
//       #ccc 50px
//     );
// }
// @keyframes bar {
//   0% {
//     width: 0;
//   }
//   100% {
//     width: 305px;
//   }
// }
// .topa {
//   animation: topa 1s 1;
//   top: 0px;
// }
// .topb {
//   animation: topb 1s 1;
//   top: 50px;
// }
// @keyframes topa {
//   0% {
//     top: -80px;
//   }
//   100% {
//     top: 0px;
//   }
// }
// @keyframes topb {
//   0% {
//     top: -30px;
//   }
//   100% {
//     top: 50px;
//   }
// }
// .slota {
//   border-radius: 5px 5px 0 0;
//   box-shadow: inset 0 1px 4px 1px rgb(244,63,63);
//   animation: bar 2s 1;
// }
// .slotb {
//   border-radius: 0 0 5px 5px;
//   box-shadow:inset 0 1px 4px 1px rgba(244,63,63,.3);
//   animation: bar 2s 1;
// }
// .box {
//   height: 900px;
//   display: flex;
//   flex-direction: column;
//   align-items: center;
//   justify-content: center;
//   background-image:
//       linear-gradient(
//         to top right,
//         red, #f06d06
//       );
//   position: fixed;
//   top: 0;
//
//   animation: box 10s linear infinite;
// }
// @keyframes box {
//   from {background-position: bottom left;}
//   to {background-position: top right;}
// }
// .a {
//
// }
// .ab{
//   border-radius: 0 0 15px 15px;
// }
// .b {
//   position: fixed;
//   top: 20px;
//   animation: titlea 1s 1;
// }
// @keyframes titlea {
//   0% {
//     opacity: 0;
//     top: 10px;
//   }
//   100% {
//     opacity: 1;
//     top: 20px;
//   }
// }
// .c {
//  display: flex;
//  flex-direction: column;
//  justify-content: center;
//  align-items: center;
// }
// .e {
//
// }
// .e {
//
// }

.a {
  box-shadow: 0 1px 10px 10px #FA6570;
}
.bg {
  top: 0px;
  height: 900px;
  position: fixed;
  background-image: url("https://d2gg9evh47fn9z.cloudfront.net/800px_COLOURBOX8469023.jpg");
  animation: moveIt 10s linear infinite;
}
@keyframes moveIt {
  from {background-position: bottom left;}
  to {background-position: top right;}
}
</style>
